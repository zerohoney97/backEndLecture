// react 첫날
// react는 메타에서 2011년쯤에 만들었다.
// react는 개발자들 사이에서 라이브러리다 프레임워크다 얘기가 많은데
// 공식 문서에서도 라이브러리다 라고 얘기를 하는데

// 라이브러리,프레임워크의 차이
// 라이브러리: 폴더의 구조가 없음.
// 프레임 워크:폴더 구조가 있음.

// 패키지를 설치 할 수 있기 때문에
// 리액트 개발을 할 때 편하게 초기 세팅을 설치받아서 사용할 수 있다.
// 메타에서 개발한 것은 react와 react-router 라이브러리
// 메타에서 개발하고 오픈소스에 기여중임~

// 리액트를 프레임워크라고 하는 이유?
// 메타에서 라이브러리를 개발하고 
// npx create-react-app [폴더명] 구문으로 패키지를 제공해서
// react를 개발할 때 권장 개발환경을 구성해준다.
// react 프로젝트 설정
// 그래서 블로그나 개발자들 사이에서 프레임워크라고 하는것.

// 리액트는 화면을 구성할 때 자바스크립트를 활용해서 html을 조작해줌 dom
// 효율적인 브라우저 랜더링을 위해
// 페이지를 효율적으로 업데이트 하기 위해서
// react는 가상 DOM을 사용해서 변경된 부분만 다시그림.(업데이트)
// 일반적인 html은 변경된 부분만 업데이트 하지않고 전체 페이지를 다시 그려주는데
// react의 가상 DOM은 메모리에 남아있고 실제 페이지의 DOM은 분리되어있는 상태
// react의 상태가 변하면 새 가상 DOM이 생성되고 이전 상태의 가상 DOM과 비교해서
// 업데이트 해야할 부분믕 찾고 (틀린그림 찾기) 실제 DOM에 업데이트를 해준다.
// 그래서 효율적인 업데이트가 가능하다.

// react를 사용하는 이유
// react의 부분 랜더링
// react는 view 중심 보여주는 것에 집중된 라이브러리

// PHP EJS 이런 SSR
// 서버에서 페이지를 완성 시켜서 브라우저에 응답해주는것.

// 클라이언트에서 페이지를 구성하는 것을 하고싶다.
// 랜더링을 클라이언트 측에서 하고 싶었던것 
// CSR => React, vue, angular

// react는 DOM의 조작을 쉽게 하기 위해서 사용을 하고
// SPA를 만들기 위해서 사용한다.
// 하나의 페이지에서 내용을 바꿔서 페이지가 전환된것 처럼 보여준다.

// react를 만든 사람은 자바스크립트를 잘하는 사람들이 만든건 아니고 그냥 개발을 잘하는 사람들이 만든것
// class문법으로 되어있음. 진입장벽이 조금 있음...조금 어려울 수도..

